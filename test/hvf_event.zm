

/************************************************************
 *                                                          *
 *    infant starts looking        infant stops looking     *
 *           0                                2             *
 *                                                          *
 *                start the attention grabber               *
 *                             1                            *
 *                                                          *
 ************************************************************/
enum ButtonDefs {
    BUTTON_LEFT = 0,
    BUTTON_LOWER = 1,
    BUTTON_RIGHT = 2
};

/**
 * Events in the display
 */
const int EVENT_START_LOOKING   = 0;    // Used when child is looking
                                        // to attention. Or when the child
                                        // looks away.
const int EVENT_STOP_LOOKING    = 1;    // Start abort trial timer


const int EVENT_AUDIO_START     = 2;    // signals start of audio (not used).
const int EVENT_AUDIO_FINISH    = 3;    // signals end of audio (not used).

const int EVENT_STOP_TIMER      = 4;    // The started timer aborts the trial.

const int EVENT_START_ATTENTION = 5;    // starts the attention grabber.
const int EVENT_STOP            = 6;    // used to finalize looking time in
                                        // familiarization phase.

string
get_event_type(int event) {
    if (event == EVENT_START_LOOKING)
        return "EVENT_START_LOOKING";
    else if(event == EVENT_STOP_LOOKING)
        return "EVENT_STOP_LOOKING";
    else if (event == EVENT_AUDIO_START)
        return "EVENT_AUDIO_START";
    else if (event == EVENT_AUDIO_FINISH)
        return "EVENT_AUDIO_FINISH";
    else if (event == EVENT_STOP_TIMER)
        return "EVENT_STOP_TIMER";
    else if (event == EVENT_STOP_TIMER)
        return "EVENT_STOP_TIMER";
    else if (event == EVENT_START_ATTENTION)
        return "EVENT_START_ATTENTION";
    else if (event == EVENT_STOP)
        return "EVENT_STOP";
        
    return "Oops unknown event.";
}
